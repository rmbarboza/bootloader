     1                                  [bits 16]
     2                                  
     3                                  [org 0x7c00]
     4                                  
     5                                  LOAD_SEGMENT equ 0x1000
     6                                  disk_retries equ 4
     7                                  
     8                                  main:
     9 00000000 EB38                    	jmp short start
    10 00000002 90                      	nop
    11                                  
    12                                  %include "bootsector.S"
     1                              <1> bootsector:
     2 00000003 4465764F53202020    <1> 	iOEM 	   db "DevOS   "	; OEM String
     3 0000000B 0002                <1> 	iSectSize  dw 0x200		; bytes per sector
     4 0000000D 01                  <1>  	iClustSize db  1             	; sectors per cluster
     5 0000000E 0100                <1> 	iResSect   dw  1             	; #of reserved sectors
     6 00000010 02                  <1> 	iFatCnt	   db  2 		; #of FAT copies
     7 00000011 E000                <1> 	iRootSize  dw  224 		; size of root directory
     8 00000013 400B                <1> 	iTotalSect dw  2880 		; total # of sectors if over 32 MB
     9 00000015 F0                  <1> 	iMedia	   db  0xF0 		; media Descriptor
    10 00000016 0900                <1> 	iFatSize   dw  9 		; size of each FAT
    11 00000018 0900                <1> 	iTrackSect dw  9 		; sectors per track
    12 0000001A 0200                <1> 	iHeadCnt   dw  2 		; number of read-write heads
    13 0000001C 0000                <1> 	iHiddenSect dw 0 		; number of hidden sectors
    14 0000001E 0000                <1> 	iSect32    dw  0 		; # sectors for over 32 MB
    15 00000020 00                  <1> 	iBootDrive db  0 		; holds drive that the boot sector came from
    16 00000021 00                  <1> 	iReserved  db  0 		; reserved, empty
    17 00000022 29                  <1> 	iBootSign  db  0x29 		; extended boot sector signature
    18 00000023 73657269            <1> 	iVolID     db  "seri" 		; disk serial
    19 00000027 4D59564F4C554D4520- <1> 	acVolumeLabel db "MYVOLUME   " 	; volume label
    19 00000030 2020                <1>
    20 00000032 4641543136202020    <1> 	acFSType   db "FAT16   " 	; file system type
    21                              <1> 
    13                                  
    14                                  start:
    15                                  	; Setup segments:
    16 0000003A FA                      	cli
    17 0000003B 8816[2000]              	mov  [iBootDrive], dl  ; save what drive we booted from (should be 0x0)
    18 0000003F 8CC8                    	mov  ax, cs          ; CS = 0x0, since that's where boot sector is (0x07c00)
    19 00000041 8ED8                    	mov  ds, ax          ; DS = CS = 0x0
    20 00000043 8EC0                    	mov  es, ax          ; ES = CS = 0x0
    21 00000045 8ED0                    	mov  ss, ax          ; SS = CS = 0x0
    22 00000047 BC0090                  	mov  sp, 0x9000      ; Stack grows down from offset 0x9000, way beyond 0x7C00.
    23 0000004A FB                      	sti  
    24                                  
    25                                  	; Display "loading" message:
    26 0000004B 8D36[3F01]              	lea  si, [loadmsg]
    27 0000004F E89F00                  	call WriteString
    28                                  
    29                                  	; Reset disk system.
    30                                  	; Jump to bootFailure on error.
    31 00000052 8A16[2000]              	mov  dl, [iBootDrive]  ; drive to reset
    32 00000056 31C0                    	xor  ax, ax          ; subfunction 0
    33 00000058 CD13                    	int  0x13            ; call interrupt 13h
    34 0000005A 724F                    	jc   bootFailure     ; display error message if carry set (error)  
    35                                  
    36                                  	; Here stage2 is not reachable. Remember that BIOS only loads the first sector of the bootloader.
    37                                  	; So we nead to read data from disk to memory
    38                                  	;call stage2
    39                                  
    40                                  	; This is done using EDD BIOS, which is much better,
    41                                  	; but first we need to check if it is available
    42                                  	; If not available we halt for simplicity
    43                                  
    44                                  checkedd:
    45                                  
    46                                  
    47                                  	; Check EDD BIOS
    48 0000005C 31C9                    	xor cx,cx
    49 0000005E B441                    	mov ah,0x41
    50 00000060 8A16[2000]              	mov dl,[iBootDrive]
    51 00000064 BBAA55                  	mov bx,0x55AA
    52 00000067 CD13                    	int 0x13
    53                                  
    54 00000069 7240                    	jc bootFailure
    55                                  
    56 0000006B 6689DA                  mov edx,ebx
    57 0000006E E86100                  call biosWriteHex
    58 00000071 E85300                  call biosWriteCRLF
    59 00000074 81FB55AA                	cmp bx,0xAA55
    60 00000078 7531                    	jne bootFailure
    61                                  
    62 0000007A F7C10100                	test cx,1
    63 0000007E 742B                    	jz bootFailure
    64                                  
    65 00000080 BB007E                  	mov bx,0x7E00
    66 00000083 66BA01000000            	mov edx,0x1
    67 00000089 E88300                  	call readOneSec
    68                                  
    69 0000008C 8B1E[0002]              	mov bx,[stage2_magic]
    70 00000090 81FBCDAB                	cmp bx,stage2_signature ; compare the signature
    71 00000094 751F                    	jne Stage2Failure
    72                                  
    73 00000096 EA[0202]0000            	jmp 0:stage2 
    74                                  
    75                                  reboot:
    76 0000009B 8D36[5A01]              	lea si, [rebootmsg] ; Load address of reboot message into si
    77 0000009F E84F00                  	call WriteString  ; print the string
    78 000000A2 31C0                    	xor ax, ax        ; subfuction 0
    79 000000A4 CD16                    	int 0x16          ; call bios to wait for key
    80 000000A6 EA                      	db 0xEA          ; machine language to jump to FFFF:0000 (reboot)
    81 000000A7 0000                    	dw 0x0000
    82 000000A9 FFFF                    	dw 0xFFFF
    83                                  
    84                                  bootFailure:
    85 000000AB 8D36[4D01]              	lea  si, [diskerror]
    86 000000AF E83F00                  	call WriteString
    87 000000B2 E8E6FF                  	call reboot
    88                                  
    89                                  Stage2Failure:
    90 000000B5 8D36[7301]              	lea  si, [stage2failure]
    91 000000B9 E83500                  	call WriteString
    92 000000BC E8DCFF                  	call reboot
    93                                  
    94                                  %include "print_funcs.S"
     1                              <1> ; Writes char in AL
     2                              <1> biosWriteChar:
     3 000000BF B40E                <1> 	mov ah, 0xE		; Subfunction 0xe of int 10h (video teletype output)
     4 000000C1 BB0900              <1> 	mov bx, 9		; Set bh (page nr) to 0, and bl (attribute) to white (9)
     5 000000C4 CD10                <1> 	int 0x10		; call BIOS interrupt.
     6 000000C6 C3                  <1> 	ret
     7                              <1> 
     8                              <1> biosWriteCRLF:
     9 000000C7 B00D                <1> 	mov al,13
    10 000000C9 E8F3FF              <1> 	call biosWriteChar
    11 000000CC B00A                <1> 	mov al,10
    12 000000CE E8EEFF              <1> 	call biosWriteChar
    13 000000D1 C3                  <1> 	ret
    14                              <1> 
    15                              <1> ; Write contents of register ex
    16                              <1> ; Input: edx
    17                              <1> biosWriteHex:
    18 000000D2 B90800              <1> 	mov cx,8
    19                              <1> .loop:
    20 000000D5 66C1C204            <1> 	rol edx,4
    21 000000D9 6689D0              <1> 	mov eax,edx
    22 000000DC 83E00F              <1> 	and ax,0x0F
    23 000000DF 0430                <1> 	add al,48
    24 000000E1 3C39                <1> 	cmp al,57
    25 000000E3 7E02                <1> 	jle .L1
    26 000000E5 0407                <1> 	add al,7
    27                              <1> .L1:
    28 000000E7 E8D5FF              <1> 	call biosWriteChar
    29 000000EA 49                  <1> 	dec cx
    30 000000EB 83F900              <1> 	cmp cx,0
    31 000000EE 75E5                <1> 	jne .loop
    32 000000F0 C3                  <1> 	ret
    33                              <1> 
    34                              <1> ;INPUT DS:SI
    35                              <1> ;Print char until 0 is found
    36                              <1> WriteString:
    37 000000F1 AC                  <1> 	lodsb	 		; load byte at ds:si into al (advancing si)
    38 000000F2 08C0                <1> 	or al,al 		; test if character is 0 (end)
    39 000000F4 7405                <1> 	jz WriteString_done 	; jump to end if 0.
    40 000000F6 E8C6FF              <1> 	call biosWriteChar
    41                              <1> 
    42 000000F9 EBF6                <1> 	jmp WriteString 	; Repeat for next character.
    43                              <1> 
    44                              <1> WriteString_done:
    45 000000FB E8C9FF              <1> 	call biosWriteCRLF
    46 000000FE C3                  <1> 	retw
    47                              <1> 
    95                                  %include "disk.S"
     1                              <1> ; readSec: 
     2                              <1> ; 	Reads N sector using bios int 13h 42h
     3                              <1> ; 	AX:    Block count to read
     4                              <1> ; 	ES:BX: Destination address
     5                              <1> ; 	EDX:   LBA address
     6                              <1> ;
     7                              <1> ; readOneSec:
     8                              <1> ;	Same but reads just one sector
     9                              <1> 
    10                              <1> ;
    11                              <1> ; From: https://wiki.osdev.org/Disk_access_using_the_BIOS_(INT_13h)
    12                              <1> ;
    13                              <1> DataPacket:
    14 000000FF 10                  <1> 		db	0x10		; Frame size: 16 bytes
    15 00000100 00                  <1> 		db	0		; Must be zero (convention)
    16 00000101 0000                <1> .blocks:	dw	0		; number of blocks
    17 00000103 007E                <1> .buffer:	dw	0x7e00		; Buffer address
    18 00000105 0000                <1> .segment	dw	0		; Buffer Segment
    19 00000107 01000000            <1> .lba:		dd	1		; LBA block address
    20 0000010B 00000000            <1> .notused	dd	0		; Linear memory address (not used)
    21                              <1> 
    22                              <1> readOneSec:	
    23 0000010F B80100              <1> 		mov	ax, 1
    24                              <1> readSec:
    25 00000112 50                  <1> 		push	ax
    26 00000113 891E[0301]          <1> 		mov	[DataPacket.buffer], bx
    27 00000117 8C06[0501]          <1> 		mov	[DataPacket.segment], es
    28 0000011B 668916[0701]        <1> 		mov	[DataPacket.lba], edx
    29 00000120 B90400              <1> 		mov	cx, disk_retries
    30                              <1> .retry:
    31 00000123 A3[0101]            <1> 		mov	[DataPacket.blocks], ax
    32 00000126 BE[FF00]            <1> 		mov	si, DataPacket
    33 00000129 B442                <1> 		mov	ah, 0x42
    34 0000012B 8A16[2000]          <1> 		mov	dl, [iBootDrive]
    35 0000012F CD13                <1> 		int	0x13
    36 00000131 730A                <1> 		jnc	short .ok
    37 00000133 678B0424            <1> 		mov	ax, [esp]
    38 00000137 E2EA                <1> 		loop	.retry
    39                              <1> 
    40 00000139 58                  <1> 		pop	ax
    41 0000013A E96EFF              <1> 		jmp	bootFailure
    42                              <1> .ok:
    43 0000013D 58                  <1> 		pop	ax
    44 0000013E C3                  <1> 		ret
    96                                  
    97                                  ; PROGRAM DATA
    98 0000013F 4C6F6164696E67204F-     loadmsg db "Loading OS...",0
    98 00000148 532E2E2E00         
    99 0000014D 4469736B206572726F-     diskerror db "Disk error. ",0
    99 00000156 722E2000           
   100 0000015A 507265737320616E79-     rebootmsg db "Press any key to reboot.",0
   100 00000163 206B657920746F2072-
   100 0000016C 65626F6F742E00     
   101 00000173 4661696C656420746F-     stage2failure db "Failed to load stage 2.",0
   101 0000017C 206C6F616420737461-
   101 00000185 676520322E00       
   102                                  
   103 0000018B 00<rept>                times 510-($-$$) db 0 	; Pad with nulls up to 510 bytes (excl. boot magic)
   104 000001FE 55AA                    dw 0xAA55     		; magic word for BIOS
   105                                  
   106                                  stage2_signature equ 0xabcd
   107                                  
   108                                  stage2_magic:
   109 00000200 CDAB                    	dw stage2_signature
   110                                  
   111                                  stage2:
   112 00000202 8D36[0C02]              	lea si,[Welcome2Stage]
   113 00000206 E8E8FE                  	call WriteString
   114 00000209 E88FFE                  	call reboot
   115                                  
   116 0000020C 57656C636F6D652074-     Welcome2Stage db "Welcome to 2 stage...",0
   116 00000215 6F2032207374616765-
   116 0000021E 2E2E2E00           
   117                                  
   118 00000222 00<rept>                times 512 db 0 	; Pad with nulls up to 512 bytes 
   119 00000422 00<rept>                times 512 db 0 	; Pad with nulls up to 512 bytes 
   120 00000622 00<rept>                times 512 db 0 	; Pad with nulls up to 512 bytes 
   121 00000822 00<rept>                times 512 db 0 	; Pad with nulls up to 512 bytes 
